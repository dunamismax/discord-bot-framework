apiVersion: apps/v1
kind: Deployment
metadata:
  name: discord-bot-framework
  labels:
    app: discord-bot-framework
    version: v2.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app: discord-bot-framework
  template:
    metadata:
      labels:
        app: discord-bot-framework
        version: v2.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: discord-bot-framework
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: discord-bot-framework
        image: ghcr.io/sawyer/discord-bot-framework:latest
        imagePullPolicy: IfNotPresent
        args: ["./discord-bot-framework", "--bot", "all"]
        ports:
        - name: metrics
          containerPort: 8080
          protocol: TCP
        - name: health
          containerPort: 8081
          protocol: TCP
        env:
        - name: LOG_LEVEL
          value: "info"
        - name: JSON_LOGGING
          value: "true"
        - name: METRICS_PORT
          value: "8080"
        - name: HEALTH_PORT
          value: "8081"
        envFrom:
        - secretRef:
            name: discord-bot-secrets
        - configMapRef:
            name: discord-bot-config
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 500m
            memory: 256Mi
        livenessProbe:
          httpGet:
            path: /health
            port: health
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: health
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1001
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: cache-volume
          mountPath: /app/cache
        - name: data-volume
          mountPath: /app/data
        - name: tmp-volume
          mountPath: /tmp
      volumes:
      - name: cache-volume
        emptyDir:
          sizeLimit: 1Gi
      - name: data-volume
        persistentVolumeClaim:
          claimName: discord-bot-data
      - name: tmp-volume
        emptyDir:
          sizeLimit: 100Mi
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/os: linux